"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[4073],{7380:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var r=t(4848),a=t(8453),s=t(1470),o=t(9365);const l={sidebar_label:"Task Manager",sidebar_position:9},i="TaskManager",u={id:"Documentation/TaskManager",title:"TaskManager",description:"Constructor",source:"@site/docs/Documentation/TaskManager.md",sourceDirName:"Documentation",slug:"/Documentation/TaskManager",permalink:"/Lightninglib/docs/Documentation/TaskManager",draft:!1,unlisted:!1,editUrl:"https://github.com/HectorAlonso18/Lightninglib/tree/main/docs/Documentation/TaskManager.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_label:"Task Manager",sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Tank Chassis",permalink:"/Lightninglib/docs/Documentation/TankChassis"},next:{title:"Math",permalink:"/Lightninglib/docs/Documentation/Math"}},c={},d=[{value:"Constructor",id:"constructor",level:2},{value:"TaskManager()",id:"taskmanager-1",level:3},{value:"Functions",id:"functions",level:2},{value:"start_task()",id:"start_task",level:3},{value:"kill_task()",id:"kill_task",level:3},{value:"print_current_task()",id:"print_current_task",level:3},{value:"Operators",id:"operators",level:2},{value:"<code>std::ostream &amp;operator &lt;&lt;</code>",id:"stdostream-operator-",level:3}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"taskmanager",children:"TaskManager"}),"\n",(0,r.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsx)(n.h3,{id:"taskmanager-1",children:"TaskManager()"}),"\n",(0,r.jsxs)(n.p,{children:["Construct a new ",(0,r.jsx)(n.code,{children:"TaskManager"})," object."]}),"\n",(0,r.jsxs)(s.A,{groupId:"taskmanager",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,r.jsx)(o.A,{value:"proto",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"TaskManager();\r\n\n"})})}),(0,r.jsx)(o.A,{value:"example",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"\r\nlightning::TaskManager Auton_tasks; \r\nvoid autonomous(){\r\n\r\n}\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(n.h3,{id:"start_task",children:"start_task()"}),"\n",(0,r.jsx)(n.p,{children:"Start a task passing a void function."}),"\n",(0,r.jsxs)(s.A,{groupId:"taskmanager_functions_start_task",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,r.jsx)(o.A,{value:"proto",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"void start_task(const std::string &task_name, void (*func)(void *));\n"})})}),(0,r.jsx)(o.A,{value:"example",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'\r\n//Some function that we want to put into the task manager\r\nvoid print_stats(void*){\r\n    while(1){\r\n        //Do some printing stuff\r\n\r\n        pros::delay(10); //Important to prevent bugs.\r\n    }\r\n}\r\n\r\nlightning::TaskManager Auton_tasks; \r\nvoid autonomous(){\r\nAuton_tasks.start_task("PRINTING", print_stats); \r\n}\n'})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameters"}),(0,r.jsx)(n.th,{})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"task_name"})}),(0,r.jsx)(n.td,{children:"The name key that you want for your task."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"function"})}),(0,r.jsx)(n.td,{children:"The void function that will pass."})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"kill_task",children:"kill_task()"}),"\n",(0,r.jsx)(n.p,{children:"Erases a selected task."}),"\n",(0,r.jsxs)(s.A,{groupId:"taskmanager_functions_kill_task",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,r.jsx)(o.A,{value:"proto",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"  void kill_task(const std::string &task_name);\r\n\n"})})}),(0,r.jsx)(o.A,{value:"example",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'\r\n//Some function that we want to put into the task manager\r\nvoid print_stats(void*){\r\n    while(1){\r\n        //Do some printing stuff\r\n\r\n        pros::delay(10); //Important to prevent bugs.\r\n    }\r\n}\r\n\r\nlightning::TaskManager Auton_tasks; \r\nvoid autonomous(){\r\nAuton_tasks.start_task("PRINTING", print_stats); \r\n/*\r\nDoing some stuff during autonomous period\r\n---\r\n--\r\n-\r\n---\r\n--\r\n*/\r\n\r\n//We can delete the "PRINTING" task\r\n\r\nAuton_tasks.kill_task("PRINTING"); //Deleting the task. \r\n\r\n}\n'})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameters"}),(0,r.jsx)(n.th,{})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"task_name"})}),(0,r.jsx)(n.td,{children:"The name key that you want for your task."})]})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"print_current_task",children:"print_current_task()"}),"\n",(0,r.jsx)(n.p,{children:"Prints the current task thar are currently running in Integrated Terminal."}),"\n",(0,r.jsxs)(s.A,{groupId:"taskmanager_functions_print_current",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,r.jsx)(o.A,{value:"proto",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"   void print_current_tasks();\r\n\n"})})}),(0,r.jsx)(o.A,{value:"example",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",metastring:"{30-35}",children:'\r\n//Our functions\r\nvoid print_stats(void*){\r\n    while(1){\r\n        //Do some printing stuff\r\n\r\n        pros::delay(10); //Important to prevent bugs.\r\n    }\r\n}\r\n\r\nvoid sensing_something(void*){\r\n    while(1){\r\n        //Do some sensing stuff\r\n        pros::delay(10); //Important to prevent bugs.\r\n    }\r\n}\r\n\r\nlightning::TaskManager Auton_tasks; \r\nvoid autonomous(){\r\nAuton_tasks.start_task("PRINTING", print_stats); \r\nAuton_tasks.start_task("SENSING",sensing_something); \r\n\r\n/*\r\nDoing some stuff during autonomous period\r\n---\r\n--\r\n\r\n*/\r\n\r\nAuton_tasks.print_current_tasks(); \r\n\r\n/*OUTPUT Of print_current_tasks\r\n PRINTING\r\n SENSING\r\n*/\r\n\r\n}\n'})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"operators",children:"Operators"}),"\n",(0,r.jsx)(n.h3,{id:"stdostream-operator-",children:(0,r.jsx)(n.code,{children:"std::ostream &operator <<"})}),"\n",(0,r.jsx)(n.p,{children:"Prints the current tasks in Integrated Terminal."}),"\n",(0,r.jsxs)(s.A,{groupId:"taskmanager_operator_<<",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,r.jsx)(o.A,{value:"proto",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"   std::ostream &operator<<(std::ostream &os, const TaskManager &task_manager); \r\n\n"})})}),(0,r.jsx)(o.A,{value:"example",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",metastring:"{30-37}",children:'\r\n//Our functions\r\nvoid print_stats(void*){\r\n    while(1){\r\n        //Do some printing stuff\r\n\r\n        pros::delay(10); //Important to prevent bugs.\r\n    }\r\n}\r\n\r\nvoid sensing_something(void*){\r\n    while(1){\r\n        //Do some sensing stuff\r\n        pros::delay(10); //Important to prevent bugs.\r\n    }\r\n}\r\n\r\nlightning::TaskManager Auton_tasks; \r\nvoid autonomous(){\r\nAuton_tasks.start_task("PRINTING", print_stats); \r\nAuton_tasks.start_task("SENSING",sensing_something); \r\n\r\n/*\r\nDoing some stuff during autonomous period\r\n---\r\n--\r\n\r\n*/\r\n\r\nstd::cout<<Auton_tasks; \r\n\r\n/*OUTPUT Of print_current_tasks\r\n PRINTING\r\n SENSING\r\n*/\r\n\r\n}\n'})})})]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var r=t(4164);const a={tabItem:"tabItem_Ymn6"};var s=t(4848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,o),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>_});var r=t(6540),a=t(4164),s=t(3104),o=t(6347),l=t(205),i=t(7485),u=t(1682),c=t(679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=p(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[u,d]=m({queryString:t,groupId:a}),[g,v]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),x=(()=>{const e=u??g;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{x&&i(x)}),[x]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),v(e)}),[d,v,s]),tabValues:s}}var v=t(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var k=t(4848);function f(e){let{className:n,block:t,selectedValue:r,selectValue:o,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.a_)(),c=e=>{const n=e.currentTarget,t=i.indexOf(n),a=l[t].value;a!==r&&(u(n),o(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,k.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,k.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>i.push(e),onKeyDown:d,onClick:c,...s,className:(0,a.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,k.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function j(e){const n=g(e);return(0,k.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,k.jsx)(f,{...n,...e}),(0,k.jsx)(b,{...n,...e})]})}function _(e){const n=(0,v.A)();return(0,k.jsx)(j,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);