"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[133],{2181:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var n=t(4848),l=t(8453),o=t(1470),a=t(9365);const i={sidebar_label:"PID",sidebar_position:1},s="PID",c={id:"Documentation/PID",title:"PID",description:"Constructors",source:"@site/docs/Documentation/PID.md",sourceDirName:"Documentation",slug:"/Documentation/PID",permalink:"/Lightninglib/docs/Documentation/PID",draft:!1,unlisted:!1,editUrl:"https://github.com/HectorAlonso18/Lightninglib/tree/main/docs/Documentation/PID.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"PID",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Documentation \ud83d\udcc4",permalink:"/Lightninglib/docs/category/documentation-"},next:{title:"Feed Forward",permalink:"/Lightninglib/docs/Documentation/Feed_Forward"}},d={},p=[{value:"Constructors",id:"constructors",level:2},{value:"PID()",id:"pid-1",level:3},{value:"Functions",id:"functions",level:2},{value:"update()",id:"update",level:3},{value:"target_arrived()",id:"target_arrived",level:3},{value:"initialization()",id:"initialization",level:3},{value:"Setters",id:"setters",level:2},{value:"set_stop_time()",id:"set_stop_time",level:3},{value:"set_error_tolerance()",id:"set_error_tolerance",level:3},{value:"set_derivative_tolerance()",id:"set_derivative_tolerance",level:3},{value:"set_integral_zone()",id:"set_integral_zone",level:3},{value:"set_integral_power_limit",id:"set_integral_power_limit",level:3},{value:"set_jump_time()",id:"set_jump_time",level:3},{value:"set_max()",id:"set_max",level:3},{value:"set_scale()",id:"set_scale",level:3},{value:"set_kp()",id:"set_kp",level:3},{value:"set_ki()",id:"set_ki",level:3},{value:"set_kd",id:"set_kd",level:3},{value:"set_sample_time",id:"set_sample_time",level:3},{value:"Getters",id:"getters",level:2},{value:"get_error()",id:"get_error",level:3},{value:"get_kp()",id:"get_kp",level:3},{value:"get_ki()",id:"get_ki",level:3},{value:"get_kd()",id:"get_kd",level:3},{value:"get_proportion()",id:"get_proportion",level:3},{value:"get_integral()",id:"get_integral",level:3},{value:"get_derivative()",id:"get_derivative",level:3},{value:"get_sample_time()",id:"get_sample_time",level:3},{value:"get_output()",id:"get_output",level:3},{value:"get_error_tolerance()",id:"get_error_tolerance",level:3},{value:"get_derivative_tolerance()",id:"get_derivative_tolerance",level:3},{value:"get_integral_zone()",id:"get_integral_zone",level:3},{value:"get_integral_power_limit()",id:"get_integral_power_limit",level:3},{value:"get_max()",id:"get_max",level:3}];function u(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"pid",children:"PID"}),"\n",(0,n.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)(r.h3,{id:"pid-1",children:"PID()"}),"\n",(0,n.jsxs)(r.p,{children:["Build ",(0,n.jsx)(r.code,{children:"PID"})," object given constants and the sample_time."]}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_constructor_1",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"  PID(const float _kp, const float _ki, const float _kd,unsigned int _sample_time, const float _scale);\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"lightning::PID position_controller (2,1,1,10,1); \n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_kp"})}),(0,n.jsx)(r.td,{children:"The proportional constant."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_ki  "})}),(0,n.jsx)(r.td,{children:"The integral constant."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_kd "})}),(0,n.jsx)(r.td,{children:"The integral constant."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_sample_time"})}),(0,n.jsx)(r.td,{children:"The derivative constant."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_scale"})}),(0,n.jsx)(r.td,{children:"A scaling factor that limits the output of the PID controller. For example, a value of 0.5 limits the output to 50% of its maximum value."})]})]})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"PID Copy constructor"})}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_constructor_2",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"  PID(const PID& other);\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"\r\nlightning::PID controller (2,1,1,10,1);\r\n\r\n //Using copy constructor\r\nlightning:: PID other_controller(controller); \r\n\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"other"})}),(0,n.jsx)(r.td,{children:"other PID object."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"functions",children:"Functions"}),"\n",(0,n.jsx)(r.h3,{id:"update",children:"update()"}),"\n",(0,n.jsx)(r.p,{children:"Updates the PID controller."}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"You should put this function inside of while loop to update the PID input."})}),"\n",(0,n.jsx)(r.p,{children:"With this function you will update the proportional, integral, derivative and output value."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_functions_1",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"   virtual void update(const float error);\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{15}",children:"//A Function to control the arms position using a PID. \r\nvoid move_arm(PID& arm_controller, float target){\r\n  \r\n  arm_controller.set_integral_zone(target * .3);\r\n  arm_controller.initialization();\r\n                            \r\n                            //some function to get current data. \r\n  float current_position  = get_current_arm_position(); \r\n  float error = target - current_position; \r\n\r\n  while (!arm_controller.target_arrived()) {\r\n    current_position= get_current_arm_position();\r\n    error = target - current_position; \r\n\r\n    arm_controller.update(error); //Updating pid controller.\r\n\r\n    left_arm.move_velocity(arm_controller.output());\r\n    right_arm.move_velocity(arm_controller.output());\r\n    \r\n    pros::delay(turn_control.get_sample_time());\r\n  }\r\n\r\n  stop_arms();\r\n }\r\n\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"error"})}),(0,n.jsx)(r.td,{children:"The error of PID controller (target - actual reading)."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"target_arrived",children:"target_arrived()"}),"\n",(0,n.jsx)(r.p,{children:"Checks if the target was reached."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_functions_target_arrived",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"   bool target_arrived() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{11}",children:"//A Function to control the arms position using a PID. \r\nvoid move_arm(PID& arm_controller, float target){\r\n\r\n  arm_controller.set_integral_zone(target * .3);\r\n  arm_controller.initialization();\r\n                            \r\n                            //some function to get current data. \r\n  float current_position  = get_current_arm_position(); \r\n  float error = target - current_position; \r\n  \r\n  while (!arm_controller.target_arrived()) { //Have the arms arrived?. \r\n    current_position= get_current_arm_position();\r\n    error = target - current_position; \r\n\r\n    arm_controller.update(error); //Updating pid controller.\r\n\r\n    left_arm.move_velocity(arm_controller.output());\r\n    right_arm.move_velocity(arm_controller.output());\r\n    \r\n    pros::delay(turn_control.get_sample_time());\r\n  }\r\n\r\n  stop_arms();\r\n }\r\n\n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," True if the target was reached, False if the target wasn\xb4t reached."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"initialization",children:"initialization()"}),"\n",(0,n.jsx)(r.p,{children:"Initialize the controller."}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"This function is neccesary to start in any procces or function where the controller is involve."})}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_functions_initialization",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"   void initialization();\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{5}",children:"//A Function to control the arms position using a PID. \r\nvoid move_arm(PID& arm_controller, float target){\r\n\r\n  arm_controller.set_integral_zone(target * .3);\r\n  arm_controller.initialization();\r\n                            \r\n                            //some function to get current data. \r\n  float current_position  = get_current_arm_position(); \r\n  float error = target - current_position; \r\n  \r\n  while (!arm_controller.target_arrived()) { //Have the arms arrived?. \r\n    current_position= get_current_arm_position();\r\n    error = target - current_position; \r\n\r\n    arm_controller.update(error); //Updating pid controller.\r\n\r\n    left_arm.move_velocity(arm_controller.output());\r\n    right_arm.move_velocity(arm_controller.output());\r\n    \r\n    pros::delay(turn_control.get_sample_time());\r\n  }\r\n\r\n  stop_arms();\r\n }\n"})})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"setters",children:"Setters"}),"\n",(0,n.jsx)(r.h3,{id:"set_stop_time",children:"set_stop_time()"}),"\n",(0,n.jsx)(r.p,{children:"Sets the stop time limit for the PID controller."}),"\n",(0,n.jsx)(r.p,{children:"This function allows the user to set the maximum time limit after which the PID controller output will be set to zero."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_stop_time",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"   void set_stop_time(const float _stop_time_msec);  \n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"lightning::PID arm_controller (2,1,1,10,1); \r\nvoid autonomous(){\r\narm_controller.set_stop_time(3000); \r\n}\r\n\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_stop_time_msec"})}),(0,n.jsx)(r.td,{children:"The stop time limit in milliseconds. If more than this time elapses,the PID controller output will be forced to zero"})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_error_tolerance",children:"set_error_tolerance()"}),"\n",(0,n.jsx)(r.p,{children:"Sets the error tolerance."}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"For example: In a distance controller maybe the error tolerance would be .02 inches"})}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_error_tolerance",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"    void set_error_tolerance(const float _error_tolerance);  \n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{4}",children:"lightning::PID arm_controller (2,1,1,10,1); \r\nvoid autonomous(){\r\narm_controller.set_stop_time(3000); \r\narm_controller.set_error_tolerance(10); \r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_error_tolerance"})}),(0,n.jsx)(r.td,{children:"The error tolerance for the controller."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_derivative_tolerance",children:"set_derivative_tolerance()"}),"\n",(0,n.jsx)(r.p,{children:"Sets derivative tolerance."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_derivative_tolerance",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"     void set_derivative_tolerance(const float _derivative_tolerance);\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{5}",children:"lightning::PID arm_controller (2,1,1,10,1); \r\nvoid autonomous(){\r\narm_controller.set_stop_time(3000); \r\narm_controller.set_error_tolerance(10); \r\narm_controller.set_derivative_tolerance(50);\r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_derivative_tolerance"})}),(0,n.jsx)(r.td,{children:"The derivative tolerance."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_integral_zone",children:"set_integral_zone()"}),"\n",(0,n.jsx)(r.p,{children:"Sets integral zone."}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"The integral zone is the zone where the intregal will not act."})}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_integral_zone",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"void set_integral_zone(const float _integral_zone);\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{4}",children:"//A Function to control the arms position using a PID. \r\nvoid move_arm(PID& arm_controller, float target){\r\n\r\n  arm_controller.set_integral_zone(target * .3);\r\n  arm_controller.initialization();\r\n                            \r\n                            //some function to get current data. \r\n  float current_position  = get_current_arm_position(); \r\n  float error = target - current_position; \r\n  \r\n  while (!arm_controller.target_arrived()) { //Have the arms arrived?. \r\n    current_position= get_current_arm_position();\r\n    error = target - current_position; \r\n\r\n    arm_controller.update(error); //Updating pid controller.\r\n\r\n    left_arm.move_velocity(arm_controller.output());\r\n    right_arm.move_velocity(arm_controller.output());\r\n    \r\n    pros::delay(turn_control.get_sample_time());\r\n  }\r\n\r\n  stop_arms();\r\n }\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_integral_zone"})}),(0,n.jsx)(r.td,{children:"The integral zone."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_integral_power_limit",children:"set_integral_power_limit"}),"\n",(0,n.jsx)(r.p,{children:"Sets integral power limit."}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"The integral power limit would be the highest value of the integral."})}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_integral_power_limit",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"void set_integral_power_limit(const float _integral_power_limit);\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{6}",children:"lightning::PID arm_controller (2,1,.135,10,1); \r\nvoid autonomous(){\r\narm_controller.set_stop_time(3000); \r\narm_controller.set_error_tolerance(10); \r\narm_controller.set_derivative_tolerance(50);\r\narm_controller.set_integral_power_limit(100/arm_controller.get_ki());\r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_integral_power_limit"})}),(0,n.jsx)(r.td,{children:"The integral power limit."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_jump_time",children:"set_jump_time()"}),"\n",(0,n.jsx)(r.p,{children:"Sets the jump time limit for the PID controller."}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"When the PID controller is approaching the target, a timer starts. If the timer reaches the jump time limit, the PID controller operation is halted."})}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_jump_time",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"void set_jump_time(const float _jump_time);\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{7}",children:"lightning::PID arm_controller (2,1,.135,10,1); \r\nvoid autonomous(){\r\narm_controller.set_stop_time(3000); \r\narm_controller.set_error_tolerance(10); \r\narm_controller.set_derivative_tolerance(50);\r\narm_controller.set_integral_power_limit(100/arm_controller.get_ki());\r\narm_controller.set_jump_time(500); \r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_jump_time"})}),(0,n.jsx)(r.td,{children:"The jump time limit in milliseconds."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_max",children:"set_max()"}),"\n",(0,n.jsx)(r.p,{children:"Sets the maximum output for the PID output."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_max",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"    void set_max(const float _max);\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{8}",children:"lightning::PID arm_controller (2,1,.135,10,1); \r\nvoid autonomous(){\r\narm_controller.set_stop_time(3000); \r\narm_controller.set_error_tolerance(10); \r\narm_controller.set_derivative_tolerance(50);\r\narm_controller.set_integral_power_limit(100/arm_controller.get_ki());\r\narm_controller.set_jump_time(500); \r\narm_controller.set_max(300); \r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_max"})}),(0,n.jsx)(r.td,{children:"The max value of the PID output."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_scale",children:"set_scale()"}),"\n",(0,n.jsx)(r.p,{children:"Set the scale for the PID controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_scale",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"    void set_scale(const float _scale);\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{10}",children:"lightning::PID arm_controller (2,1,.135,10,1); \r\nvoid autonomous(){\r\narm_controller.set_stop_time(3000); \r\narm_controller.set_error_tolerance(10); \r\narm_controller.set_derivative_tolerance(50);\r\narm_controller.set_integral_power_limit(100/arm_controller.get_ki());\r\narm_controller.set_jump_time(500); \r\narm_controller.set_max(300); \r\narm_controller.set_min(0);\r\narm_controller.set_scale(1); //Default\r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_scale"})}),(0,n.jsx)(r.td,{children:"scaling factor that limits the output of the PID controller.For example, a value of 0.5 limits the output to 50% of its maximum value."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_kp",children:"set_kp()"}),"\n",(0,n.jsx)(r.p,{children:"Sets the proportional constant (kp) of the PID controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_kp",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"    void set_kp(const float _kp);\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"void autonomous(){\r\ncontroller.set_kp (5); \r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_kp"})}),(0,n.jsx)(r.td,{children:"The new value for the proportional constant."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_ki",children:"set_ki()"}),"\n",(0,n.jsx)(r.p,{children:"Sets the integral constant (ki) of the PID controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_ki",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"void set_ki(const float _ki);\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{3}",children:"void autonomous(){\r\ncontroller.set_kp(5);\r\ncontroller.set_ki(.012);  \r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_ki"})}),(0,n.jsx)(r.td,{children:"The new value for the integral constant."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_kd",children:"set_kd"}),"\n",(0,n.jsx)(r.p,{children:"Sets the derivative constant (kd) of the PID controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_kd",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"void set_kd(const float _kd);\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{4}",children:"void autonomous(){\r\ncontroller.set_kp(5);\r\ncontroller.set_ki(.012);  \r\ncontroller.set_kd(1);\r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"_kd"})}),(0,n.jsx)(r.td,{children:"The new value for the derivative constant."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"set_sample_time",children:"set_sample_time"}),"\n",(0,n.jsx)(r.p,{children:"Sets the sample time of the PID controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_setters_kd",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"void set_sample_time(const  unsigned int time_msec); \r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{5}",children:"void autonomous(){\r\ncontroller.set_kp(5);\r\ncontroller.set_ki(.012);  \r\ncontroller.set_kd(1);\r\ncontroller.set_sample_time(10); \r\n}\n"})})})]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameters"}),(0,n.jsx)(r.th,{})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"time_msec"})}),(0,n.jsx)(r.td,{children:"The new sample time in milliseconds."})]})})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"getters",children:"Getters"}),"\n",(0,n.jsx)(r.h3,{id:"get_error",children:"get_error()"}),"\n",(0,n.jsx)(r.p,{children:"Gets the current error."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_error",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_error() const;\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float current_error = controller.get_error(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The current error."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"get_kp",children:"get_kp()"}),"\n",(0,n.jsx)(r.p,{children:"Gets proportional constant [Kp]."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_kp",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_kp() const;\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float kp_constant = controller.get_kp(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The kp constant."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"get_ki",children:"get_ki()"}),"\n",(0,n.jsx)(r.p,{children:"Gets proportional constant [Ki]."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_ki",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_ki() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float ki_constant = controller.get_ki(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The ki constant."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"get_kd",children:"get_kd()"}),"\n",(0,n.jsx)(r.p,{children:"Gets proportional constant [Kd]."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_kd",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_kd() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float kd_constant = controller.get_kd(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The kd constant."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"get_proportion",children:"get_proportion()"}),"\n",(0,n.jsx)(r.p,{children:"Gets the proportion part of the output."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_proportional",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"double get_proportion() const;\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{17}",children:"//A Function to control the arms position using a PID. \r\nvoid move_arm(PID& arm_controller, float target){\r\n\r\n  arm_controller.set_integral_zone(target * .3);\r\n  arm_controller.initialization();\r\n                            \r\n                            //some function to get current data. \r\n  float current_position  = get_current_arm_position(); \r\n  float error = target - current_position; \r\n  \r\n  while (!arm_controller.target_arrived()) { //Have the arms arrived?. \r\n    current_position= get_current_arm_position();\r\n    error = target - current_position; \r\n\r\n    arm_controller.update(error); //Updating pid controller.\r\n\r\n    float proportion = arm.controller.get_proportion(); //Proportion part\r\n\r\n    left_arm.move_velocity(proportion); //P controller \r\n    right_arm.move_velocity(proportion); // P controller \r\n    \r\n    pros::delay(turn_control.get_sample_time());\r\n  }\r\n\r\n  stop_arms();\r\n }\n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The proportion value."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"get_integral",children:"get_integral()"}),"\n",(0,n.jsx)(r.p,{children:"Gets the proportion part of the output."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_integral",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"double get_integral() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{18}",children:"//A Function to control the arms position using a PID. \r\nvoid move_arm(PID& arm_controller, float target){\r\n\r\n  arm_controller.set_integral_zone(target * .3);\r\n  arm_controller.initialization();\r\n                            \r\n                            //some function to get current data. \r\n  float current_position  = get_current_arm_position(); \r\n  float error = target - current_position; \r\n  \r\n  while (!arm_controller.target_arrived()) { //Have the arms arrived?. \r\n    current_position= get_current_arm_position();\r\n    error = target - current_position; \r\n\r\n    arm_controller.update(error); //Updating pid controller.\r\n\r\n    float proportion = arm.controller.get_proportion(); //Proportion part\r\n    float integral = arm.controller.get_integral(); // Integral part\r\n\r\n    left_arm.move_velocity(proportion+integral); //PI controller \r\n    right_arm.move_velocity(proportion+integral); // PI controller \r\n    \r\n    pros::delay(turn_control.get_sample_time());\r\n  }\r\n\r\n  stop_arms();\r\n }\n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The integral value."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"get_derivative",children:"get_derivative()"}),"\n",(0,n.jsx)(r.p,{children:"Gets the proportion part of the output."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_derivative",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"double get_derivative() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{19}",children:"//A Function to control the arms position using a PID. \r\nvoid move_arm(PID& arm_controller, float target){\r\n\r\n  arm_controller.set_integral_zone(target * .3);\r\n  arm_controller.initialization();\r\n                            \r\n                            //some function to get current data. \r\n  float current_position  = get_current_arm_position(); \r\n  float error = target - current_position; \r\n  \r\n  while (!arm_controller.target_arrived()) { //Have the arms arrived?. \r\n    current_position= get_current_arm_position();\r\n    error = target - current_position; \r\n\r\n    arm_controller.update(error); //Updating pid controller.\r\n\r\n    float proportion = arm.controller.get_proportion(); //Proportion part\r\n    float integral = arm.controller.get_integral(); // Integral part\r\n    float derivative = arm.controller.get_derivative(); //Derivative part\r\n\r\n    left_arm.move_velocity(proportion+integral+derivative); //PID controller \r\n    right_arm.move_velocity(proportion+integral+derivative); // PID controller \r\n    \r\n    pros::delay(turn_control.get_sample_time());\r\n  }\r\n\r\n  stop_arms();\r\n }\n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The derivative value."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"get_sample_time",children:"get_sample_time()"}),"\n",(0,n.jsx)(r.p,{children:"Gets the sample time."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_sample_time",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"unsigned int get_sample_time() const;\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"int controller_sample_time = controller.get_sample_time(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The sample time."]}),"\n",(0,n.jsx)(r.h3,{id:"get_output",children:"get_output()"}),"\n",(0,n.jsx)(r.p,{children:"Gets the current output from controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_output",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"double get_output() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",metastring:"{17}",children:"//A Function to control the arms position using a PID. \r\nvoid move_arm(PID& arm_controller, float target){\r\n\r\n  arm_controller.set_integral_zone(target * .3);\r\n  arm_controller.initialization();\r\n                            \r\n                            //some function to get current data. \r\n  float current_position  = get_current_arm_position(); \r\n  float error = target - current_position; \r\n  \r\n  while (!arm_controller.target_arrived()) { //Have the arms arrived?. \r\n    current_position= get_current_arm_position();\r\n    error = target - current_position; \r\n\r\n    arm_controller.update(error); //Updating pid controller.\r\n    \r\n    float output = arm_controller.get_output(); \r\n\r\n    left_arm.move_velocity(output);  \r\n    right_arm.move_velocity(output); \r\n    \r\n    pros::delay(turn_control.get_sample_time());\r\n  }\r\n\r\n  stop_arms();\r\n }\n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The current output from controller."]}),"\n",(0,n.jsx)(r.h3,{id:"get_error_tolerance",children:"get_error_tolerance()"}),"\n",(0,n.jsx)(r.p,{children:"Retrieves the error tolerance of the PID controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_error_tolerance",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_error_tolerance() const;\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float error_tolerance = controller.get_error_tolerance(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The current error tolerance value."]}),"\n",(0,n.jsx)(r.h3,{id:"get_derivative_tolerance",children:"get_derivative_tolerance()"}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_derivative_tolerance",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_derivative_tolerance() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float derivative_tolerance = controller.get_derivative_tolerance(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The current derivative tolerance value."]}),"\n",(0,n.jsx)(r.h3,{id:"get_integral_zone",children:"get_integral_zone()"}),"\n",(0,n.jsx)(r.p,{children:"Retrieves the integral zone of the PID controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_integral_zone",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_integral_zone() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float integral_zone = controller.get_integral_zone(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The current integral zone value."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"get_integral_power_limit",children:"get_integral_power_limit()"}),"\n",(0,n.jsx)(r.p,{children:"Retrieves the integral power limit of the PID controller."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_integral_power_limit",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_integral_power_limit() const;\r\n\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float integral_power_limit = controller.get_integral_power_limit(); \n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The current integral power limit value."]}),"\n",(0,n.jsx)(r.h3,{id:"get_max",children:"get_max()"}),"\n",(0,n.jsx)(r.p,{children:"Retrieves the maximum value allowed for the PID controller output."}),"\n",(0,n.jsxs)(o.A,{groupId:"pid_getters_max",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.A,{value:"proto",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float get_max() const;\n"})})}),(0,n.jsx)(a.A,{value:"example",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:"float max_value = controller.get_max();\n"})})})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Returns:"})," The maximum values allowed."]}),"\n",(0,n.jsx)(r.hr,{})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},9365:(e,r,t)=>{t.d(r,{A:()=>a});t(6540);var n=t(4164);const l={tabItem:"tabItem_Ymn6"};var o=t(4848);function a(e){let{children:r,hidden:t,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.A)(l.tabItem,a),hidden:t,children:r})}},1470:(e,r,t)=>{t.d(r,{A:()=>P});var n=t(6540),l=t(4164),o=t(3104),a=t(6347),i=t(205),s=t(7485),c=t(1682),d=t(679);function p(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:r,children:t}=e;return(0,n.useMemo)((()=>{const e=r??function(e){return p(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:l}}=e;return{value:r,label:t,attributes:n,default:l}}))}(t);return function(e){const r=(0,c.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function h(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function _(e){let{queryString:r=!1,groupId:t}=e;const l=(0,a.W6)(),o=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,s.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const r=new URLSearchParams(l.location.search);r.set(o,e),l.replace({...l.location,search:r.toString()})}),[o,l])]}function m(e){const{defaultValue:r,queryString:t=!1,groupId:l}=e,o=u(e),[a,s]=(0,n.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!h({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:o}))),[c,p]=_({queryString:t,groupId:l}),[m,x]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[l,o]=(0,d.Dv)(t);return[l,(0,n.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:l}),g=(()=>{const e=c??m;return h({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{g&&s(g)}),[g]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),x(e)}),[p,x,o]),tabValues:o}}var x=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function v(e){let{className:r,block:t,selectedValue:n,selectValue:a,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const r=e.currentTarget,t=s.indexOf(r),l=i[t].value;l!==n&&(c(r),a(l))},p=e=>{let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;r=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;r=s[t]??s[s.length-1];break}}r?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},r),children:i.map((e=>{let{value:r,label:t,attributes:o}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:e=>s.push(e),onKeyDown:p,onClick:d,...o,className:(0,l.A)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":n===r}),children:t??r},r)}))})}function f(e){let{lazy:r,children:t,selectedValue:l}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=o.find((e=>e.props.value===l));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==l})))})}function b(e){const r=m(e);return(0,j.jsxs)("div",{className:(0,l.A)("tabs-container",g.tabList),children:[(0,j.jsx)(v,{...r,...e}),(0,j.jsx)(f,{...r,...e})]})}function P(e){const r=(0,x.A)();return(0,j.jsx)(b,{...e,children:p(e.children)},String(r))}},8453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>i});var n=t(6540);const l={},o=n.createContext(l);function a(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);