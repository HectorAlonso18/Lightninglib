"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[6602],{2669:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=n(4848),r=n(8453),l=n(1470),s=n(9365);const i={sidebar_label:"Path",sidebar_position:5},o="Path",c={id:"Documentation/Path",title:"Path",description:"The coordinates must to be in (inches), orientation in (degrees) and velocity units in (inches/seconds).",source:"@site/docs/Documentation/Path.md",sourceDirName:"Documentation",slug:"/Documentation/Path",permalink:"/Lightninglib/docs/Documentation/Path",draft:!1,unlisted:!1,editUrl:"https://github.com/HectorAlonso18/Lightninglib/tree/main/docs/Documentation/Path.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Path",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Odom Tracker",permalink:"/Lightninglib/docs/Documentation/Odom_tracker"},next:{title:"Pure pursuit",permalink:"/Lightninglib/docs/Documentation/Pure_pursuit"}},h={},d=[{value:"Constructors",id:"constructors",level:2},{value:"Path()",id:"path-1",level:3},{value:"Path()",id:"path-2",level:3},{value:"Path tuning functions",id:"path-tuning-functions",level:2},{value:"inject_points()",id:"inject_points",level:3},{value:"smoother",id:"smoother",level:3},{value:"upgrade()",id:"upgrade",level:3},{value:"Setters",id:"setters",level:2},{value:"set_max_lineal_velocity()",id:"set_max_lineal_velocity",level:3},{value:"set_reverse()",id:"set_reverse",level:3},{value:"Calcs functions",id:"calcs-functions",level:2},{value:"make_calcs()",id:"make_calcs",level:3},{value:"calc_orientation()",id:"calc_orientation",level:3},{value:"calc_target_angular_velocities()",id:"calc_target_angular_velocities",level:3},{value:"Getters",id:"getters",level:2},{value:"get_curvature_vector()",id:"get_curvature_vector",level:3},{value:"get_distance_vector()",id:"get_distance_vector",level:3},{value:"get_maximum_lineal_velocities()",id:"get_maximum_lineal_velocities",level:3},{value:"get_target_lineal_velocities()",id:"get_target_lineal_velocities",level:3},{value:"get_orientation_vector()",id:"get_orientation_vector",level:3},{value:"get_target_angular_velocities()",id:"get_target_angular_velocities",level:3},{value:"get_size()",id:"get_size",level:3},{value:"get_point_at()",id:"get_point_at",level:3},{value:"get_x_at()",id:"get_x_at",level:3},{value:"get_y_at()",id:"get_y_at",level:3},{value:"get_target_lineal_velocity_at()",id:"get_target_lineal_velocity_at",level:3},{value:"get_maximum_lineal_velocity()",id:"get_maximum_lineal_velocity",level:3},{value:"get_theta_at()",id:"get_theta_at",level:3},{value:"get_target_angular_velocity_at()",id:"get_target_angular_velocity_at",level:3},{value:"Checkers",id:"checkers",level:2},{value:"is_inject()",id:"is_inject",level:3},{value:"is_smooth()",id:"is_smooth",level:3},{value:"is_ready()",id:"is_ready",level:3},{value:"is_reverse()",id:"is_reverse",level:3},{value:"Operators",id:"operators",level:2},{value:"<code>std::ostream &amp;operator&lt;&lt;</code>",id:"stdostream-operator",level:3}];function p(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"path",children:"Path"}),"\n",(0,a.jsxs)(t.admonition,{type:"warning",children:[(0,a.jsxs)(t.p,{children:["The coordinates must to be in ",(0,a.jsx)(t.strong,{children:"(inches)"}),", orientation in ",(0,a.jsx)(t.strong,{children:"(degrees)"})," and velocity units in ",(0,a.jsx)(t.strong,{children:"(inches/seconds)"}),"."]}),(0,a.jsxs)(t.p,{children:["Otherwise, the code will ",(0,a.jsx)(t.strong,{children:"not work"})," as expected."]})]}),"\n",(0,a.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,a.jsx)(t.h3,{id:"path-1",children:"Path()"}),"\n",(0,a.jsxs)(t.p,{children:["Constructor that initializes a ",(0,a.jsx)(t.code,{children:"Path"})," object with specified parameters."]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["For this constructor the ",(0,a.jsx)(t.code,{children:"B"})," constant is setted to .75 and the tolerance ",(0,a.jsx)(t.code,{children:"a"})," value of .001"]})}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_constructor_1",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"Path(const std::vector<double> &X, const std::vector<double> &Y,bool _reverse, int _spacing);\r\n\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"\r\nlightning::Path goal_path ({0,0,24,48},{0,24,48,64},false,3); \r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"X"})}),(0,a.jsx)(t.td,{children:"A vector that includes the x coordinates of each point."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Y"})}),(0,a.jsx)(t.td,{children:"A vector that includes the y coordinates of each point."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"_reverse"})}),(0,a.jsx)(t.td,{children:"A boolean flag indicating if the path should be reversed. True if reversed."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"_spacing"})}),(0,a.jsx)(t.td,{children:"The space that would exist between each point for the injection method."})]})]})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"path-2",children:"Path()"}),"\n",(0,a.jsxs)(t.p,{children:["Constructor that initializes a ",(0,a.jsx)(t.code,{children:"Path"})," object with ",(0,a.jsx)(t.strong,{children:"FULL"})," parameters."]}),"\n",(0,a.jsxs)(t.p,{children:["This constructor initializes a ",(0,a.jsx)(t.code,{children:"Path"})," object using the provided ",(0,a.jsx)(t.code,{children:"coordinates"}),", ",(0,a.jsx)(t.code,{children:"reverse"})," flag, and ",(0,a.jsx)(t.code,{children:"spacing"})," value and with ",(0,a.jsx)(t.code,{children:"B"})," and ",(0,a.jsx)(t.code,{children:"Tolerance"})," constants."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_constructor_2",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"  Path(const std::vector<double> &X, const std::vector<double> &Y,bool _reverse, int _spacing, const double B, const double Tolerance);\r\n\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"//Creating a path\r\nlightning::Path goal_path ({0,0,24,48},{0,24,48,64},false,3,1,.98,.002); \r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"X"})}),(0,a.jsx)(t.td,{children:"A vector that includes the x coordinates of each point."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Y"})}),(0,a.jsx)(t.td,{children:"A vector that includes the y coordinates of each point."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"_reverse"})}),(0,a.jsx)(t.td,{children:"A boolean flag indicating if the path should be reversed. True if reversed."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"_spacing"})}),(0,a.jsx)(t.td,{children:"The space that would exist between each point for the injection method."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"B"})}),(0,a.jsx)(t.td,{children:"Weight_smooth constant, larger b means a smoother path, a value between .75 and .98 works well."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Tolerance"})}),(0,a.jsx)(t.td,{children:"It is the tolerance, a value of .001 works pretty well."})]})]})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"path-tuning-functions",children:"Path tuning functions"}),"\n",(0,a.jsx)(t.h3,{id:"inject_points",children:"inject_points()"}),"\n",(0,a.jsxs)(t.p,{children:["Injects point to the current ",(0,a.jsx)(t.code,{children:"Path"})," (using ",(0,a.jsx)(t.code,{children:"_spacing"})," as parameter)."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_tunning_inject_points",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"    void inject_points(void);\r\n\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{2}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},false,3); //Creating the path\r\ngoal_path.inject_points();  //Injecting more points to goal_path\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"smoother",children:"smoother"}),"\n",(0,a.jsxs)(t.p,{children:["Smooths the current ",(0,a.jsx)(t.code,{children:"Path"}),"."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_tunning_smoother",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"    void smoother(void);\r\n\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{3}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},false,3); //Creating the path\r\ngoal_path.inject_points(); //Injecting more points to goal_path\r\ngoal_path.smoother();  //Smoothing goal_path\r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"upgrade",children:"upgrade()"}),"\n",(0,a.jsx)(t.p,{children:"Upgrades the path using the injecting and smoothing algorithm."}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["Instead of using ",(0,a.jsx)(t.code,{children:"inject_points"})," and then the ",(0,a.jsx)(t.code,{children:"smoother"})," function you can simply use ",(0,a.jsx)(t.code,{children:"upgrade"}),"!"]})}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_tunning_smoother",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"    void upgrade(void);\r\n\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{2}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},false,3); //Creating the path\r\ngoal_path.upgrade(); //In this function we are injecting points and then smoothing the goal_path. \r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"setters",children:"Setters"}),"\n",(0,a.jsx)(t.h3,{id:"set_max_lineal_velocity",children:"set_max_lineal_velocity()"}),"\n",(0,a.jsx)(t.admonition,{type:"warning",children:(0,a.jsxs)(t.p,{children:["This function it is ",(0,a.jsx)(t.strong,{children:"essencial"}),". You must invoke before using the ",(0,a.jsx)(t.code,{children:"make_calcs"})," function."]})}),"\n",(0,a.jsxs)(t.p,{children:["Sets the maximum velocity ",(0,a.jsx)(t.strong,{children:"(inches/second)"})," for the path."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_setters_max_lineal_velocity",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"   void set_max_lineal_velocity(double velocity);\r\n\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{5}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},false,3); \r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second). \r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"velocity"})}),(0,a.jsxs)(t.td,{children:["The max velocity in ",(0,a.jsx)(t.strong,{children:"inches/second"}),"."]})]})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"set_reverse",children:"set_reverse()"}),"\n",(0,a.jsxs)(t.p,{children:["Sets if the path is ",(0,a.jsx)(t.strong,{children:"reversed"}),"."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_setters_reverse",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"void set_reverse(bool _is_reverse);\r\n\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{5}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_reverse(true); //Reversing goal_path\r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second). \r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"_is_reverse"})}),(0,a.jsx)(t.td,{children:"Your path it is reversed?"})]})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"calcs-functions",children:"Calcs functions"}),"\n",(0,a.jsx)(t.h3,{id:"make_calcs",children:"make_calcs()"}),"\n",(0,a.jsx)(t.p,{children:"Makes all the calculations that need to calculates the target velocities."}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(t.p,{children:"Is neccesary to set the max velocity first."})}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_calcs_make",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"void make_calcs(const float k);\r\n\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{10}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(1.15);  \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Param"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"k"})}),(0,a.jsx)(t.td,{children:"it is constant, how slow you want the robot to go around turns. (aroud 1-5)"})]})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"calc_orientation",children:"calc_orientation()"}),"\n",(0,a.jsx)(t.p,{children:"Calculates the orientation allong the path."}),"\n",(0,a.jsxs)(t.admonition,{type:"note",children:[(0,a.jsx)(t.mdxAdmonitionTitle,{}),(0,a.jsx)(t.p,{children:"The orientation is the angle between the points."})]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_calcs_orientation",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"void calc_orientation(const float offset);\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{8}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.calc_orientation(0);\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"offset"})}),(0,a.jsx)(t.td,{children:"The offset, if you want to set an orientation offset"})]})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"calc_target_angular_velocities",children:"calc_target_angular_velocities()"}),"\n",(0,a.jsx)(t.p,{children:"Calculates the target angular velocities."}),"\n",(0,a.jsx)(t.admonition,{type:"warning",children:(0,a.jsxs)(t.p,{children:["The functions must to be invoke after using the ",(0,a.jsx)(t.code,{children:"make_calcs"})," function."]})}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_calcs_angular_velocities",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"void calc_target_angular_velocities();\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\ngoal_path.calc_target_angular_velocities(); \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"getters",children:"Getters"}),"\n",(0,a.jsx)(t.h3,{id:"get_curvature_vector",children:"get_curvature_vector()"}),"\n",(0,a.jsx)(t.p,{children:"Gets the curvature vector."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_curvature_vector",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"    std::vector<double> get_curvature_vector() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nstd::vector<float>curvature_in_path= goal_path.get_curvature_vector();\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," A new vector with all the curvatures."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_distance_vector",children:"get_distance_vector()"}),"\n",(0,a.jsx)(t.p,{children:"Gets the distance vector."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_distance_vector",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"std::vector<double> get_distance_vector() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nstd::vector<float>distance_in_path= goal_path.get_distance_vector();\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," A new vector with the distance between each point."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_maximum_lineal_velocities",children:"get_maximum_lineal_velocities()"}),"\n",(0,a.jsx)(t.p,{children:"Gets the maximum lineal velocities vector."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_max_lin_vel_vector",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"std::vector<double> get_maximum_lineal_velocities() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nstd::vector<float>max_velocities_in_path= goal_path.get_maximum_lineal_velocities();\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"}),"  A new vector with the maximum lineal velocities in each point."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_target_lineal_velocities",children:"get_target_lineal_velocities()"}),"\n",(0,a.jsx)(t.p,{children:"Gets the target lineal velocities vector."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_target_lin_vel_vector",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"std::vector<double> get_target_lineal_velocities() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nstd::vector<float>target_velocities_in_path= goal_path.get_target_lineal_velocities();\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," A new vector with the target lineal velocity in each point."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_orientation_vector",children:"get_orientation_vector()"}),"\n",(0,a.jsx)(t.p,{children:"Gets the orientation vector."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_orientation_vector",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"std::vector<double> get_orientation_vector() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nstd::vector<float>orientation_vector= goal_path.get_orientation_vector();\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," A new vector filled with the orientation target."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_target_angular_velocities",children:"get_target_angular_velocities()"}),"\n",(0,a.jsx)(t.p,{children:"Gets the target angular velocities vector."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_angular_velocities_vector",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"  std::vector<double> get_target_angular_velocities() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nstd::vector<float>angular_velocities_vector= goal_path.get_target_angular_velocities();\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," A new vector filled with the target angular velocities."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_size",children:"get_size()"}),"\n",(0,a.jsx)(t.p,{children:"Gets the path size."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_size",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"int16_t get_size() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nint size= goal_path.get_orientation_vector();\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," The ",(0,a.jsx)(t.code,{children:"Path"})," size."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_point_at",children:"get_point_at()"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves a point given an index."}),"\n",(0,a.jsxs)(t.p,{children:["This method returns the coordinates of a point at the specified index in the ",(0,a.jsx)(t.code,{children:"Path"}),"."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_point_at",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"std::vector<double> get_point_at(const int index) const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nstd::vector<double> a_Point= goal_path.get_point_at(5); //Getting a point at index 5 of goal_path. \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"index"})}),(0,a.jsx)(t.td,{children:"The index of the point to retrieve."})]})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," A vector containing the x and y coordinates of the point."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_x_at",children:"get_x_at()"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves the x coordinate of a point given an index."}),"\n",(0,a.jsxs)(t.p,{children:["This method returns the x coordinate of the point at the specified index in the ",(0,a.jsx)(t.code,{children:"Path"}),"."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_x_at",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"double get_x_at(const int index) const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\ndouble x_point= goal_path.get_x_at(5); //Getting a x at index 5 of goal_path. \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"index"})}),(0,a.jsx)(t.td,{children:"The index of the point to retrieve the x coordinate from."})]})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," The x coordinate of the point."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_y_at",children:"get_y_at()"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves the y coordinate of a point given an index."}),"\n",(0,a.jsxs)(t.p,{children:["This method returns the y coordinate of the point at the specified index in the ",(0,a.jsx)(t.code,{children:"Path"}),"."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_y_at",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"double get_y_at(const int index) const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{14}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\ndouble x_point= goal_path.get_x_at(5); //Getting a x at index 5 of goal_path. \r\ndouble y_point= goal_path.get_y_at(5); //Getting a y at index 5 of goal_path. \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"index"})}),(0,a.jsx)(t.td,{children:"The index of the point to retrieve the y coordinate from."})]})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," The y coordinate of the point."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_target_lineal_velocity_at",children:"get_target_lineal_velocity_at()"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves the target linear velocity at a given index."}),"\n",(0,a.jsxs)(t.p,{children:["This method returns the target linear velocity at the specified index in the ",(0,a.jsx)(t.code,{children:"Path"}),"."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_target_lin_velocity_at",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"double get_target_lineal_velocity_at(const int index) const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\ndouble target_velocity = goal_path.get_target_lineal_velocity_at(5) //getting target velocity at index 5. \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"index"})}),(0,a.jsx)(t.td,{children:"The index of the point to retrieve the target linear velocity from."})]})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," The target linear velocity at the specified index."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_maximum_lineal_velocity",children:"get_maximum_lineal_velocity()"}),"\n",(0,a.jsxs)(t.p,{children:["Gets the maximum lineal velocity of the ",(0,a.jsx)(t.code,{children:"Path"}),"."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_maximum_lineal",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"double get_maximum_lineal_velocity() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\ndouble maximum_velocity = goal_path.get_maximum_lineal_velocity()//getting maximum of goal_path. \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," The maximum velocity."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_theta_at",children:"get_theta_at()"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves the orientation (theta) at a given index"}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_theta_at",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:" double get_theta_at(const int index) const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\ndouble theta = goal_path.get_theta_at(5)//getting theta at index 5 of the path. \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"index"})}),(0,a.jsx)(t.td,{children:"The Index the index of the point to retrieve the orientation(theta)"})]})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," The theta at the specified index."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"get_target_angular_velocity_at",children:"get_target_angular_velocity_at()"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves the target angular velocity at a given index."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_getters_target_angular_velocity at",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"double get_target_angular_velocity_at(const int index) const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\ndouble target_angular_velocity = goal_path.get_target_angular_velocity_at(5)//getting target angular velocity at index 5. \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameters"}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"index"})}),(0,a.jsx)(t.td,{children:"The index of the point to retrieve the target angular velocity."})]})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Returns:"})," The theta at the specified index."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"checkers",children:"Checkers"}),"\n",(0,a.jsxs)(t.p,{children:["Checks if the ",(0,a.jsx)(t.code,{children:"Path"})," is raw."]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["When the ",(0,a.jsx)(t.code,{children:"Path"})," is not injected or smoothed, is it considered ",(0,a.jsx)(t.strong,{children:"raw"}),"."]})}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_checkers_raw",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"bool is_raw() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{5,9}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\nstd::cout<<goal_path.is_raw(); /*Output: True. */\r\n\r\ngoal_path.inject_points(); \r\n\r\nstd::cout<<goal_path.is_raw(); /*Output: False. */\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"is_inject",children:"is_inject()"}),"\n",(0,a.jsx)(t.p,{children:"Checks if the path was injected."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_checkers_inject",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"bool is_inject() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{5,9}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\nstd::cout<<goal_path.is_inject(); /*Output: False. */\r\n\r\ngoal_path.inject_points(); \r\n\r\nstd::cout<<goal_path.is_raw(); /*Output: True. */\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"is_smooth",children:"is_smooth()"}),"\n",(0,a.jsx)(t.p,{children:"Checks if the path it is smooth."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_checkers_smooth",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"bool is_smooth() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{5,9,13}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\nstd::cout<<goal_path.is_smooth(); /*Output: False. */\r\n\r\ngoal_path.inject_points(); \r\n\r\nstd::cout<<goal_path.is_smooth(); /*Output: False. */\r\n\r\ngoal_path.smoother(); \r\n\r\nstd::cout<<goal_path.is_smooth(); /*Output: True. */\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"is_ready",children:"is_ready()"}),"\n",(0,a.jsx)(t.p,{children:"Checks if the path it is ready."}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["When the ",(0,a.jsx)(t.code,{children:"Path"})," is injected, smoothed, with the maximum velocity set, and the velocities calculated, it is considered ",(0,a.jsx)(t.strong,{children:"ready"}),"."]})}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_checkers_ready",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"bool is_ready() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{5,9,13,20}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\nstd::cout<<goal_path.is_ready(); /*Output: False. */\r\n\r\ngoal_path.inject_points(); \r\n\r\nstd::cout<<goal_path.is_ready(); /*Output: False. */\r\n\r\ngoal_path.smoother(); \r\n\r\nstd::cout<<goal_path.is_ready(); /*Output: False. */\r\n\r\ngoal_path.set_max_lineal_velocity(10); //10 (inches/second).\r\n\r\ngoal_path.make_cals(); \r\npros::delay(10); //giving some time to make the calculations. \r\n\r\nstd::cout<<goal_path.is_ready(); /*Output: True. */\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"is_reverse",children:"is_reverse()"}),"\n",(0,a.jsx)(t.p,{children:"Checks if the path it is reversed."}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_checkers_ready",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"bool is_reverse() const;\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{5}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\n\r\nstd::cout<<goal_path.is_reverse(); /*Output: False. */\r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"operators",children:"Operators"}),"\n",(0,a.jsx)(t.h3,{id:"stdostream-operator",children:(0,a.jsx)(t.code,{children:"std::ostream &operator<<"})}),"\n",(0,a.jsxs)(t.p,{children:["Prints the ",(0,a.jsx)(t.code,{children:"Path"})," coordinates in the integrated terminal."]}),"\n",(0,a.jsxs)(l.A,{groupId:"Path_checkers_ready",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,a.jsx)(s.A,{value:"proto",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"std::ostream &operator<<(std::ostream &os, const Path &path);\n"})})}),(0,a.jsx)(s.A,{value:"example",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:"{7}",children:"lightning::Path goal_path ({0,0,24,48},{0,24,48,64},true,3); \r\n\r\nvoid autonomous(){\r\ngoal_path.inject_points(); \r\ngoal_path.smoother(); \r\n\r\nstd::cout<<goal_path; //PRINTING THE PATH COORDINATES \r\n\r\n}\r\n\n"})})})]}),"\n",(0,a.jsx)(t.hr,{})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>s});n(6540);var a=n(4164);const r={tabItem:"tabItem_Ymn6"};var l=n(4848);function s(e){let{children:t,hidden:n,className:s}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,s),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>y});var a=n(6540),r=n(4164),l=n(3104),s=n(6347),i=n(205),o=n(7485),c=n(1682),h=n(679);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function u(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function x(e){let{queryString:t=!1,groupId:n}=e;const r=(0,s.W6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,l=p(e),[s,o]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[c,d]=x({queryString:n,groupId:r}),[g,_]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,h.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:r}),j=(()=>{const e=c??g;return u({value:e,tabValues:l})?e:null})();(0,i.A)((()=>{j&&o(j)}),[j]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),_(e)}),[d,_,l]),tabValues:l}}var _=n(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(4848);function m(e){let{className:t,block:n,selectedValue:a,selectValue:s,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),h=e=>{const t=e.currentTarget,n=o.indexOf(t),r=i[n].value;r!==a&&(c(t),s(r))},d=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:l}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>o.push(e),onKeyDown:d,onClick:h,...l,className:(0,r.A)("tabs__item",j.tabItem,l?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function b(e){let{lazy:t,children:n,selectedValue:r}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function f(e){const t=g(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,v.jsx)(m,{...t,...e}),(0,v.jsx)(b,{...t,...e})]})}function y(e){const t=(0,_.A)();return(0,v.jsx)(f,{...e,children:d(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var a=n(6540);const r={},l=a.createContext(r);function s(e){const t=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(l.Provider,{value:t},e.children)}}}]);